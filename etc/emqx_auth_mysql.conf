##--------------------------------------------------------------------
## MySQL Auth/ACL Plugin
##--------------------------------------------------------------------

server {
  host = "127.0.0.1"
  port = 3306
  username = "root"
  password = "public"
  database = "mqtt"
  pool_size = 8
  query_timeout = 5s
}

## Authentication query.
##
## Note that column names should be 'password' and 'salt' (if used).
## In case column names differ in your DB - please use aliases,
## e.g. "my_column_name as password".
##
## Value: SQL
##
## Variables:
##  - %u: username
##  - %c: clientid
##  - %C: common name of client TLS cert
##  - %d: subject of client TLS cert
##
auth_query = "select password_hash as password from mqtt_user where username = '%u' limit 1"

## Password hash: plain | md5 | sha | sha256 | bcrypt
password_hash = sha256

## sha256 with salt prefix
## password_hash = salt,sha256

## bcrypt with salt only prefix
## password_hash = salt,bcrypt

## sha256 with salt suffix
## password_hash = sha256,salt

## pbkdf2 with macfun iterations dklen
## macfun: md4, md5, ripemd160, sha, sha224, sha256, sha384, sha512
## password_hash = pbkdf2,sha256,1000,20

## Superuser query.
##
## Value: SQL
##
## Variables:
##  - %u: username
##  - %c: clientid
##  - %C: common name of client TLS cert
##  - %d: subject of client TLS cert
##
super_query = "select is_superuser from mqtt_user where username = '%u' limit 1"

## ACL query.
##
## Value: SQL
##
## Variables:
##  - %a: ipaddr
##  - %u: username
##  - %c: clientid
##
## Note: You can add the 'ORDER BY' statement to control the rules match order
acl_query = "select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = '%a' or username = '%u' or username = '$all' or clientid = '%c'"

